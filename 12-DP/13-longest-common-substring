class Solution{
    public:
    int longestCommonSubstr (string s1, string s2, int n, int m)
    {
        // Create a dp array with (n+1) x (m+1) dimensions initialized to 0
        vector<vector<int>> dp(n+1, vector<int>(m+1, 0));
        int ans = 0;
        
        // Fill the dp array
        for(int i = 1; i <= n; i++) {
            for(int j = 1; j <= m; j++) {
                if(s1[i-1] == s2[j-1]) {
                    dp[i][j] = 1 + dp[i-1][j-1];
                    ans = max(ans, dp[i][j]);
                } else {
                    dp[i][j] = 0; // Reset if characters don't match
                }
            }
        }
        return ans;
    }
};