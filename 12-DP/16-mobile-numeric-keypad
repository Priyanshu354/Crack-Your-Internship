
class Solution {
public:
    long long solve(int i, int key, int n, vector<vector<int>>& adj, vector<vector<long long>>& dp) {
        if (key == n) return 1;

        if (dp[i][key] != -1) return dp[i][key];
        
        long long cnt = 0;
        for (auto it : adj[i]) {
            cnt += solve(it, key + 1, n, adj, dp);
        }
        return dp[i][key] = cnt;
    }

    long long getCount(int n) {
        vector<vector<int>> adj = {
            {0, 8},        // 0
            {1, 2, 4},     // 1
            {2, 1, 3, 5},  // 2
            {3, 2, 6},     // 3
            {4, 1, 5, 7},  // 4
            {5, 2, 4, 6, 8}, // 5
            {6, 3, 5, 9},  // 6
            {7, 4, 8},     // 7
            {8, 5, 7, 9, 0}, // 8
            {9, 6, 8},     // 9
        };
        
       
        vector<vector<long long>> dp(10, vector<long long>(n + 1, -1));
        
        long long ans = 0;
        for (int i = 0; i < 10; i++) {
            ans += solve(i, 1, n, adj, dp);
        }
        return ans;
    }
};