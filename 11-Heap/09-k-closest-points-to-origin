class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<double,int>> pq;
        int n = points.size();

        for(int i=0;i<n;i++){
            int num = (points[i][0] * points[i][0]) + (points[i][1] * points[i][1]);
            double x = sqrt(num);
            if(pq.size() < k){
                pq.push({x,i});
            }
            else{
                if(pq.top().first > x){
                    pq.pop();
                    pq.push({x,i});
                }
            }
        }
        vector<vector<int>> ans;
        while(!pq.empty()){
            ans.push_back(points[pq.top().second]);
            pq.pop();
        }

        return ans;
    }
};