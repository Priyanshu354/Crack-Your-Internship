class Solution{
	public:
    int spanningTree(int V, vector<vector<int>> adj[]){
        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>> > pq;
        pq.push({0,0});
        
        int sum = 0;
        vector<bool>vis(V, false);
        
        while(!pq.empty()){
            auto p = pq.top();
            pq.pop();
            
            int wt = p.first;
            int node = p.second;
            
            if(vis[node]) continue;
            
            vis[node] = true;
            sum += wt;
            
            for(auto &v:adj[node]){
                int child = v[0], child_wt = v[1];
                pq.push({child_wt, child});
            }
        }
        return sum;
    }
};